## ////////////////////////////////////////////////////////////////////////// //
##
## This file is part of the autoconf-bootstrap project.
## Copyright 2018 Andrea Rigoni Garola <andrea.rigoni@igi.cnr.it>.
##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <http://www.gnu.org/licenses/>.
##
## ////////////////////////////////////////////////////////////////////////// //



# //////////////////////////////////////////////////////////////////////////// #
# //  BUILD COMMON  ////////////////////////////////////////////////////////// #
# //////////////////////////////////////////////////////////////////////////// #

AX_KCONFIG_VAR_WITH([DOWNLOAD_DIR],["Default download directory path"])
AC_SUBST([DOWNLOAD_DIR])
AX_GITIGNORE_ADD_PATH([${DOWNLOAD_DIR}])

AX_KCONFIG_VAR_WITH([MAKE_PROCESS],
			["Number of parallel process (aka -j option, 0=auto)"])
AS_VAR_IF([MAKE_PROCESS],[0],
	  [AS_VAR_SET([MAKE_PROCESS],[$(grep -c ^processor /proc/cpuinfo)])])
AC_MSG_NOTICE([build make process -j${MAKE_PROCESS}])
AC_SUBST([MAKE_PROCESS])

AC_SUBST([DOWNLOADS])




##
## conditional with src build
## TODO: move this in bootstrap
##
AS_VAR_SET([abs_srcdir],[$(cd ${srcdir}; pwd)])
AS_VAR_SET([abs_builddir],[$(cd ${builddir}; pwd)])
AM_CONDITIONAL([SRCDIR_BUILD],[test "x${abs_srcdir}" == "x${abs_builddir}"])
AC_SUBST([SRCDIR_BUILD])


# ////////////////////////////////////////////////////////////////////////////////
# //  IDE SUPPORT  ///////////////////////////////////////////////////////////////
# ////////////////////////////////////////////////////////////////////////////////

AX_KCONFIG_VAR_ENABLE([IDESUPPORT],["set with IDESUPPORT"])
AM_CONDITIONAL([IDESUPPORT],[test x"${IDESUPPORT}" = x"yes"])


AX_KCONFIG_CHOICE([IDE],
  [IDE_ATOM],["atom"],
  [IDE_EMACS],["emacs"],
  [IDE_QTCREATOR],["qtcreator"],
  [IDE_ECLIPSE],["eclipse"])
AC_SUBST([IDE])
AC_PATH_TOOL([IDE_BIN],[${IDE}])
AC_SUBST([IDE_BIN])

AX_KCONFIG_VAR_WITH([IDE_WSDIR],[Workspace directory])
AC_SUBST([IDE_WSDIR])



## CUSTOM GNUMAKE #

AX_KCONFIG_VAR_ENABLE([BUILD_CUSTOM_GNUMAKE],[Build custom make binary])
AM_CONDITIONAL([BUILD_CUSTOM_GNUMAKE],[test x"${BUILD_CUSTOM_GNUMAKE}" = x"yes"])

AX_KCONFIG_VAR_WITH([BUILD_CUSTOM_GNUMAKE_URL],[Build custom gnumake url])
AC_SUBST([BUILD_CUSTOM_GNUMAKE_URL])

AX_KCONFIG_VAR_WITH([BUILD_CUSTOM_GNUMAKE_DIR],[Build custom gnumake directory])
AC_SUBST([BUILD_CUSTOM_GNUMAKE_DIR])



# ////////////////////////////////////////////////////////////////////////////////
# //  REMOTE IDE SUPPORT  ////////////////////////////////////////////////////////
# ////////////////////////////////////////////////////////////////////////////////

## CODE_SERVER ##

AX_KCONFIG_VAR_ENABLE([REMOTE_IDESUPPORT],["set with REMOTE_IDESUPPORT"])
AM_CONDITIONAL([REMOTE_IDESUPPORT],[test x"${REMOTE_IDESUPPORT}" = x"yes"])

AX_KCONFIG_VAR_WITH([CODE_SERVER_URL],[code-server binary url download])
AC_SUBST([CODE_SERVER_URL])
AX_KCONFIG_VAR_WITH([CODE_SERVER_HOST],[code-server host ip])
AC_SUBST([CODE_SERVER_HOST])
AX_KCONFIG_VAR_WITH([CODE_SERVER_PORT],[code-server port])
AC_SUBST([CODE_SERVER_PORT])

AX_KCONFIG_CHOICE([CODE_SERVER_AUTH],
  [CODE_SERVER_AUTH_NONE],["none"],
  [CODE_SERVER_AUTH_PASSWORD],["password"])
AC_SUBST([CODE_SERVER_AUTH])


